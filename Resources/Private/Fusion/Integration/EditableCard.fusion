prototype(TechDivision.Card:Integration.EditableCard) < prototype(Neos.Neos:ContentComponent) {

    //api
    cardLayout = Neos.Fusion:Case {
        defaultCardLayout {
            @position = 'end'
            condition = ${true}
            renderer = ${q(node).property('cardLayout') ? q(node).property('cardLayout') : ''}
        }
    }

    imageUri = Neos.Fusion:Case {
        asset {
            condition = ${q(node).property('cardImage')}
            renderer = Neos.Neos:ImageUri {
                asset = ${q(node).property('cardImage')}
            }
        }
    }

    targetUri = ''

    buttonText = Neos.Neos:Editable {
        property = 'cardButtonText'
    }

    supportingText = Neos.Neos:Editable {
        property = 'cardSupportingText'
    }

    supportingTextDisplayCondition = ${documentNode.context.inBackend || this.supportingText}

    linkedTitleDisplayCondition = ${!documentNode.context.inBackend && this.targetUri}

    editableTitle = Neos.Neos:Editable {
        property = 'cardTitle'
    }

    editableSecondaryText = Neos.Neos:Editable {
        property = 'cardSecondaryText'
    }

    renderer = afx`
        <TechDivision.Card:Augmenter.CardLayoutAugmenter>
            <div @if.condition={props.cardLayout == ''}>
                <TechDivision.Card:Template.Card.Basic
                        imageUri={props.imageUri}
                        targetUri={props.targetUri}
                        buttonText={props.buttonText}
                        supportingText={props.supportingText}
                        supportingTextDisplayCondition={props.supportingTextDisplayCondition}
                        linkedTitleDisplayCondition={props.linkedTitleDisplayCondition}
                        cardTitle={props.editableTitle}
                        secondaryText={props.editableSecondaryText} />
            </div>
            <div @if.condition={props.cardLayout == 'onlyTitleAndSupportingText'}>
                <TechDivision.Card:Template.Card.OnlyTitleAndSupportingText
                        targetUri={props.targetUri}
                        buttonText={props.buttonText}
                        supportingText={props.supportingText}
                        supportingTextDisplayCondition={props.supportingTextDisplayCondition}
                        linkedTitleDisplayCondition={props.linkedTitleDisplayCondition}
                        cardTitle={props.editableTitle}
                        secondaryText={props.editableSecondaryText} />
            </div>
            <div @if.condition={props.cardLayout == 'titleAboveMedia'}>
                <TechDivision.Card:Template.Card.TitleAboveMedia
                        imageUri={props.imageUri}
                        targetUri={props.targetUri}
                        buttonText={props.buttonText}
                        supportingText={props.supportingText}
                        supportingTextDisplayCondition={props.supportingTextDisplayCondition}
                        linkedTitleDisplayCondition={props.linkedTitleDisplayCondition}
                        cardTitle={props.editableTitle}
                        secondaryText={props.editableSecondaryText} />
            </div>
        </TechDivision.Card:Augmenter.CardLayoutAugmenter>
    `
}
